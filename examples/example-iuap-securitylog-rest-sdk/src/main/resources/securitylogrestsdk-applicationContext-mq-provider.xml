<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/rabbit
	http://www.springframework.org/schema/rabbit/spring-rabbit-1.4.xsd">
 
	<!-- 连接服务配置  -->
	<rabbit:connection-factory id="connectionFactory" addresses="${mq.address}"  username="${mq.username}" password="${mq.password}" publisher-confirms="false"/>
         
	<rabbit:admin connection-factory="connectionFactory"/>
    
	<!-- queue 队列声明-->
	<rabbit:queue id="simple_queue0" durable="true" auto-delete="false" exclusive="false" name="simple_queue0"/>
	<rabbit:queue id="simple_queue1" durable="true" auto-delete="false" exclusive="false" name="simple_queue1"/>
	<rabbit:queue id="simple_queue2" durable="true" auto-delete="false" exclusive="false" name="simple_queue2"/>
	<rabbit:queue id="simple_queue3" durable="true" auto-delete="false" exclusive="false" name="simple_queue3"/>
	<rabbit:queue id="simple_queue4" durable="true" auto-delete="false" exclusive="false" name="simple_queue4"/>
	<rabbit:queue id="simple_queue5" durable="true" auto-delete="false" exclusive="false" name="simple_queue5"/>
	<rabbit:queue id="simple_queue6" durable="true" auto-delete="false" exclusive="false" name="simple_queue6"/>
		
	<!-- exchange queue binging key 绑定，作为点对点模式使用 -->
	<rabbit:direct-exchange name="iuap-direct-exchange" durable="true" auto-delete="false" id="iuap-direct-exchange">
		<rabbit:bindings>
			<rabbit:binding queue="simple_queue0" key="simple_queue_key0"/>
		    <rabbit:binding queue="simple_queue1" key="simple_queue_key1"/>
		    <rabbit:binding queue="simple_queue2" key="simple_queue_key2"/>
		    <rabbit:binding queue="simple_queue3" key="simple_queue_key3"/>
		    <rabbit:binding queue="simple_queue4" key="simple_queue_key4"/>
		    <rabbit:binding queue="simple_queue5" key="simple_queue_key5"/>
		    <rabbit:binding queue="simple_queue6" key="simple_queue_key6"/>		 
		</rabbit:bindings>
	</rabbit:direct-exchange>
	
    <!-- spring amqp默认的是jackson 的一个插件,目的将生产者生产的数据转换为json存入消息队列，由于fastjson的速度快于jackson,这里替换为fastjson的一个实现 -->
    <bean id="jsonMessageConverter" class="com.yonyou.iuap.mq.rabbit.FastJsonMessageConverter"></bean>

	<!-- 通用 template声明 -->
	<rabbit:template id="rabbitTemplate"  retry-template="retryConnTemplate"  connection-factory="connectionFactory"  message-converter="jsonMessageConverter"/>
	
	<!-- 通用RabbitMQ producer声明 -->
	<bean id="rabbitMQProducer" class="com.yonyou.iuap.mq.rabbit.RabbitMQProducer">
		<property name="rabbitTemplate" ref="rabbitTemplate"></property>
	</bean>
	
	<bean id="securitylogRestSpringContextUtil" class="com.iuap.log.security.utils.SpringContextUtil"></bean>
	
	<!-- 增加失败重试机制，发送失败之后，会尝试重发三次，重发间隔(ms)为 
	    第一次 initialInterval 
	    此后：initialInterval*multiplier > maxInterval ? maxInterval : initialInterval*multiplier。
	    配合集群使用的时候，当mq集群中一个down掉之后，重试机制尝试其他可用的mq。
	 -->
	<bean id="retryConnTemplate" class="org.springframework.retry.support.RetryTemplate">
        <property name="backOffPolicy">
            <bean class="org.springframework.retry.backoff.ExponentialBackOffPolicy">
                <property name="initialInterval" value="500"/>
                <property name="multiplier" value="10.0"/>
                <property name="maxInterval" value="5000"/>
            </bean>
        </property>
    </bean>
</beans>